#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
# Source0 file verified with key 0xA6EEEC9E0136164A (jadahl@gmail.com)
#
Name     : wayland-protocols
Version  : 1.25
Release  : 28
URL      : https://wayland.freedesktop.org/releases/wayland-protocols-1.25.tar.xz
Source0  : https://wayland.freedesktop.org/releases/wayland-protocols-1.25.tar.xz
Source1  : https://wayland.freedesktop.org/releases/wayland-protocols-1.25.tar.xz.sig
Summary  : Wayland protocol files
Group    : Development/Tools
License  : MIT
Requires: wayland-protocols-data = %{version}-%{release}
Requires: wayland-protocols-license = %{version}-%{release}
BuildRequires : buildreq-meson
BuildRequires : gcc-dev32
BuildRequires : gcc-libgcc32
BuildRequires : gcc-libstdc++32
BuildRequires : glibc-dev32
BuildRequires : glibc-libc32
BuildRequires : wayland-dev
BuildRequires : wayland-dev32

%description
Xwayland keyboard grabbing protocol
Maintainers:
Olivier Fourdan <ofourdan@redhat.com>

%package data
Summary: data components for the wayland-protocols package.
Group: Data

%description data
data components for the wayland-protocols package.


%package dev
Summary: dev components for the wayland-protocols package.
Group: Development
Requires: wayland-protocols-data = %{version}-%{release}
Provides: wayland-protocols-devel = %{version}-%{release}
Requires: wayland-protocols = %{version}-%{release}

%description dev
dev components for the wayland-protocols package.


%package dev32
Summary: dev32 components for the wayland-protocols package.
Group: Default
Requires: wayland-protocols-data = %{version}-%{release}
Requires: wayland-protocols-dev = %{version}-%{release}

%description dev32
dev32 components for the wayland-protocols package.


%package license
Summary: license components for the wayland-protocols package.
Group: Default

%description license
license components for the wayland-protocols package.


%prep
%setup -q -n wayland-protocols-1.25
cd %{_builddir}/wayland-protocols-1.25
pushd ..
cp -a wayland-protocols-1.25 build32
popd
pushd ..
cp -a wayland-protocols-1.25 buildavx2
popd

%build
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1656347842
export GCC_IGNORE_WERROR=1
export AR=gcc-ar
export RANLIB=gcc-ranlib
export NM=gcc-nm
export CFLAGS="$CFLAGS -O3 -ffat-lto-objects -flto=auto "
export FCFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export FFLAGS="$FFLAGS -O3 -ffat-lto-objects -flto=auto "
export CXXFLAGS="$CXXFLAGS -O3 -ffat-lto-objects -flto=auto "
CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" meson --libdir=lib64 --prefix=/usr --buildtype=plain   builddir
ninja -v -C builddir
CFLAGS="$CFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 -O3" CXXFLAGS="$CXXFLAGS -m64 -march=x86-64-v3 -Wl,-z,x86-64-v3 " LDFLAGS="$LDFLAGS -m64 -march=x86-64-v3" meson --libdir=lib64 --prefix=/usr --buildtype=plain   builddiravx2
ninja -v -C builddiravx2
pushd ../build32/
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig:/usr/share/pkgconfig"
export ASFLAGS="${ASFLAGS}${ASFLAGS:+ }--32"
export CFLAGS="${CFLAGS}${CFLAGS:+ }-m32 -mstackrealign"
export CXXFLAGS="${CXXFLAGS}${CXXFLAGS:+ }-m32 -mstackrealign"
export LDFLAGS="${LDFLAGS}${LDFLAGS:+ }-m32 -mstackrealign"
meson --libdir=lib32 --prefix=/usr --buildtype=plain   builddir
ninja -v -C builddir
popd

%check
export LANG=C.UTF-8
export http_proxy=http://127.0.0.1:9/
export https_proxy=http://127.0.0.1:9/
export no_proxy=localhost,127.0.0.1,0.0.0.0
meson test -C builddir --print-errorlogs
cd ../build32;
meson test -C builddir --print-errorlogs || :

%install
mkdir -p %{buildroot}/usr/share/package-licenses/wayland-protocols
cp %{_builddir}/wayland-protocols-1.25/COPYING %{buildroot}/usr/share/package-licenses/wayland-protocols/9d823228bce4c6977989fdd7b58026cd62fc55e0
pushd ../build32/
DESTDIR=%{buildroot} ninja -C builddir install
if [ -d  %{buildroot}/usr/lib32/pkgconfig ]
then
pushd %{buildroot}/usr/lib32/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
if [ -d %{buildroot}/usr/share/pkgconfig ]
then
pushd %{buildroot}/usr/share/pkgconfig
for i in *.pc ; do ln -s $i 32$i ; done
popd
fi
popd
DESTDIR=%{buildroot}-v3 ninja -C builddiravx2 install
DESTDIR=%{buildroot} ninja -C builddir install
/usr/bin/elf-move.py avx2 %{buildroot}-v3 %{buildroot} %{buildroot}/usr/share/clear/filemap/filemap-%{name}

%files
%defattr(-,root,root,-)

%files data
%defattr(-,root,root,-)
/usr/share/wayland-protocols/stable/presentation-time/presentation-time.xml
/usr/share/wayland-protocols/stable/viewporter/viewporter.xml
/usr/share/wayland-protocols/stable/xdg-shell/xdg-shell.xml
/usr/share/wayland-protocols/staging/drm-lease/drm-lease-v1.xml
/usr/share/wayland-protocols/staging/ext-session-lock/ext-session-lock-v1.xml
/usr/share/wayland-protocols/staging/xdg-activation/xdg-activation-v1.xml
/usr/share/wayland-protocols/unstable/fullscreen-shell/fullscreen-shell-unstable-v1.xml
/usr/share/wayland-protocols/unstable/idle-inhibit/idle-inhibit-unstable-v1.xml
/usr/share/wayland-protocols/unstable/input-method/input-method-unstable-v1.xml
/usr/share/wayland-protocols/unstable/input-timestamps/input-timestamps-unstable-v1.xml
/usr/share/wayland-protocols/unstable/keyboard-shortcuts-inhibit/keyboard-shortcuts-inhibit-unstable-v1.xml
/usr/share/wayland-protocols/unstable/linux-dmabuf/linux-dmabuf-unstable-v1.xml
/usr/share/wayland-protocols/unstable/linux-explicit-synchronization/linux-explicit-synchronization-unstable-v1.xml
/usr/share/wayland-protocols/unstable/pointer-constraints/pointer-constraints-unstable-v1.xml
/usr/share/wayland-protocols/unstable/pointer-gestures/pointer-gestures-unstable-v1.xml
/usr/share/wayland-protocols/unstable/primary-selection/primary-selection-unstable-v1.xml
/usr/share/wayland-protocols/unstable/relative-pointer/relative-pointer-unstable-v1.xml
/usr/share/wayland-protocols/unstable/tablet/tablet-unstable-v1.xml
/usr/share/wayland-protocols/unstable/tablet/tablet-unstable-v2.xml
/usr/share/wayland-protocols/unstable/text-input/text-input-unstable-v1.xml
/usr/share/wayland-protocols/unstable/text-input/text-input-unstable-v3.xml
/usr/share/wayland-protocols/unstable/xdg-decoration/xdg-decoration-unstable-v1.xml
/usr/share/wayland-protocols/unstable/xdg-foreign/xdg-foreign-unstable-v1.xml
/usr/share/wayland-protocols/unstable/xdg-foreign/xdg-foreign-unstable-v2.xml
/usr/share/wayland-protocols/unstable/xdg-output/xdg-output-unstable-v1.xml
/usr/share/wayland-protocols/unstable/xdg-shell/xdg-shell-unstable-v5.xml
/usr/share/wayland-protocols/unstable/xdg-shell/xdg-shell-unstable-v6.xml
/usr/share/wayland-protocols/unstable/xwayland-keyboard-grab/xwayland-keyboard-grab-unstable-v1.xml

%files dev
%defattr(-,root,root,-)
/usr/share/pkgconfig/wayland-protocols.pc

%files dev32
%defattr(-,root,root,-)
/usr/share/pkgconfig/32wayland-protocols.pc

%files license
%defattr(0644,root,root,0755)
/usr/share/package-licenses/wayland-protocols/9d823228bce4c6977989fdd7b58026cd62fc55e0
